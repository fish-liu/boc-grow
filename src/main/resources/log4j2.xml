<?xml version="1.0" encoding="UTF-8"?>
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE >ALL -->
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出；可以设置成OFF(关闭)或Error(只输出错误信息)-->
<!--monitorInterval：Log4j2能够自动检测修改配置文件和重新配置本身，设置间隔秒数-->
<Configuration status="WARN">

    <!-- 定义所有的appender -->
    <Appenders>

        <!--这个输出控制台的配置-->
        <Console name="Console" target="SYSTEM_OUT">
            <!--输出日志的格式-->
            <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss} [%p] %l - %m%n"/>
        </Console>


        <!-- info及以上级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
        <RollingFile name="infoLog"
                     fileName="${sys:logging.path}/aliyun_log"
                     filePattern="${sys:logging.path}/aliyun_log-%d{yyyy-MM-dd}-%i.gz"
                     immediateFlush="true" >

            <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss} [%p] %l - %m%n"/>



            <Policies>
                <!-- 基于时间的滚动策略，interval属性用来指定多久滚动一次，默认是1 hour -->
                <TimeBasedTriggeringPolicy interval="1" modulate="true"/>
                <!-- 基于指定文件大小的滚动策略，size属性用来定义每个日志文件的大小 -->
                <SizeBasedTriggeringPolicy size="1024MB"/>
                <!-- DefaultRolloverStrategy:用来指定同一个文件夹下最多有几个日志文件时开始删除最旧的，创建新的(通过max属性) -->
            </Policies>


            <DefaultRolloverStrategy max="3">
                <Delete basePath="${sys:logging.path}" maxDepth="10" followLinks="true">
                    <!--只保留7天，超过则删除-->
                    <IfLastModified age="2d"/>
                    <IfAccumulatedFileSize exceeds="3GB"/>
                </Delete>
            </DefaultRolloverStrategy>

        </RollingFile>


        <!-- warn级别的日志信息 -->
        <RollingFile name="warnLog"
                                 fileName="${sys:logging.path}/aliyun-warn.log"
                                 filePattern="${sys:logging.path}/aliyun-warn.log-%d{yyyy-MM-dd}-%i.gz"
                                 append="true">

            <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss} [%p] %l - %m%n"/>

            <Filters>
                <ThresholdFilter level="warn" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>

            <Policies>
                <TimeBasedTriggeringPolicy interval="1" modulate="true"/>
                <SizeBasedTriggeringPolicy size="1024MB"/>
            </Policies>

            <DefaultRolloverStrategy max="3"/>

        </RollingFile>


        <!-- error级别的日志信息 -->
        <RollingFile name="errorLog"
                                 fileName="${sys:logging.path}/aliyun-error.log"
                                 filePattern="${sys:logging.path}/aliyun-error.log-%d{yyyy-MM-dd}-%i.gz"
                                 append="true">

            <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss} [%p] %l - %m%n"/>

            <Filters>
                <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>

            <Policies>
                <TimeBasedTriggeringPolicy interval="1" modulate="false"/>
                <SizeBasedTriggeringPolicy size="1024MB"/>
            </Policies>

            <DefaultRolloverStrategy max="3">
                <Delete basePath="${sys:logging.path}" maxDepth="10">
                    <ifAny>
                        <IfAccumulatedFileSize exceeds="10GB"/>
                        <IfLastModified age="3d" />
                    </ifAny>
                </Delete>
            </DefaultRolloverStrategy>

        </RollingFile>
    </Appenders>


    <!-- 全局配置，默认所有的Logger都继承此配置 -->

    <!-- 用来配置LoggerConfig，包含一个root logger和若干个普通logger。
         additivity指定是否同时输出log到父类的appender，缺省为true。
         一个Logger可以绑定多个不同的Appender。只有定义了logger并引入的appender，appender才会生效。
    -->
    <Loggers>
        <!-- 第三方的软件日志级别 -->
        <logger name="org.springframework" level="info" additivity="false">
            <AppenderRef ref="infoLog"/>
        </logger>

        <logger name="java.sql.PreparedStatement" level="debug" additivity="false">
            <AppenderRef ref="Console"/>
        </logger>

        <logger name="com.ucarinc.framework.looker" level="info" additivity="false">
            <AppenderRef ref="infoLog"/>
            <AppenderRef ref="Console"/>
        </logger>

        <!-- root logger 配置 -->
        <Root level="info" includeLocation="true">
            <AppenderRef ref="Console"/>
            <AppenderRef ref="infoLog"/>
            <AppenderRef ref="warnLog"/>
            <AppenderRef ref="errorLog"/>
        </Root>

    </Loggers>

</Configuration>
